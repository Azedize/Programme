import os
import py_compile

def compile_python_files():
    try:
        print("üîÑ Compilation des fichiers Python en cours...")
        exclude_dirs = {'Lib', 'Scripts', 'Include', '__pycache__', 'build', 'dist'}  # Exclusion des r√©pertoires inutiles

        # On va chercher uniquement dans le dossier 'Tools'
        print("üìÇ Exploration du dossier 'Tools' pour les fichiers Python...")
        for root, dirs, files in os.walk('Tools'):  # Sp√©cifie le dossier "Tools"
            print(f"üîç En cours d'exploration: {root}")
            
            # Exclure certains r√©pertoires (si pr√©sents dans Tools)
            dirs[:] = [d for d in dirs if d not in exclude_dirs]
            print(f"   ‚ûñ R√©pertoires exclus: {exclude_dirs}")
            print(f"   ‚û°Ô∏è R√©pertoires √† explorer: {dirs}")
            
            # Trouver les fichiers .py dans ce dossier
            py_files = [os.path.join(root, f) for f in files if f.endswith('.py')]
            if py_files:
                print(f"   üîç Fichiers Python trouv√©s: {py_files}")
            else:
                print(f"   üö´ Aucun fichier Python trouv√© dans {root}.")
            
            # Compiler chaque fichier Python trouv√©
            for py_file in py_files:  # Boucle sur chaque fichier Python
                print(f"   ‚û°Ô∏è Compilation du fichier : {py_file}")
                try:
                    py_compile.compile(py_file, cfile=py_file + 'c', doraise=True)
                    print(f"   ‚úÖ Compilation r√©ussie pour {py_file}")
                except py_compile.PyCompileError as e:
                    print(f"‚ùå Erreur de compilation pour {py_file} : {e}")
                    continue  # Passer au fichier suivant en cas d'erreur

        print("‚úÖ Compilation termin√©e avec succ√®s pour tous les fichiers.")
        return True

    except Exception as e:
        print(f"‚ùå Erreur lors de la compilation des fichiers Python : {e}")
        return False
